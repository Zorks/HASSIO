/* Animation */
@keyframes rotation {
		from {
				transform: rotate(0deg);
		}
		to {
				transform: rotate(359deg);
		}
}

@keyframes rotate90 {
	100% {
		transform: rotate(90deg);
	}
}

@keyframes rotateReset90 {
	0% {
		transform: rotate(90deg);
	}
	100% {
		transform: none;
	}
}

@keyframes rotate-90 {
	100% {
		transform: rotate(-90deg);
	}
}

@keyframes rotateReset-90 {
	0% {
		transform: rotate(-90deg);
	}
	100% {
		transform: none;
	}
}

@keyframes fadeIn {
   0% {
		 opacity: 0;
	 }
   100% {
		 opacity: 1;
	 }
}

@keyframes fadeOut {
   0% {
		 opacity: 1;
	 }
   100% {
		 opacity: 0;
	 }
}

/* SVG shapes */

svg, svg * {
  vector-effect: non-scaling-stroke !important;
  pointer-events: all !important;
  background-color: black !important;
}

/* Hover over */

.entity:hover {
  stroke: #03A9F4 !important;
  stroke-width: 1px !important;
  stroke-opacity: 1 !important;
}

/* Bootstrap succsss */

.success-text {
  fill: #3c763d !important;
}

.success-background, .success-text-background {
  fill: #dff0d8 !important;
  fill-opacity: 1 !important;
  stroke: #d6e9c6 !important;
  stroke-width: 1px !important;
}

/* Bootstrap info */

.info-text {
  fill: #31708f !important;
}

.info-background, .info-text-background {
  fill: #d9edf7 !important;
  fill-opacity: 1 !important;
  stroke: #bce8f1 !important;
  stroke-width: 1px !important;
}

/* Bootstrap warning */

.warning-text {
  fill: #8a6d3b !important;
}

.warning-background, .warning-text-background  {
  fill: #fcf8e3 !important;
  fill-opacity: 1 !important;
  stroke: #faebcc !important;
  stroke-width: 1px !important;
}

/* Bootstrap danger */

.danger-text {
  fill: #a94442 !important;
}

.danger-background, .danger-text-background {
  fill: #f2dede !important;
  fill-opacity: 1 !important;
  stroke: #ebccd1 !important;
  stroke-width: 1px !important;
}

/* Last motion entity */

.last-motion {
  stroke: #808080 !important;
  stroke-width: 1px !important;
  stroke-opacity: 1 !important;
}

/* Front Door Lock */

.schlage_unlocked {
  fill: #ED1C24 !important;
}

.schlage_locked {
  fill: #00ff00 !important;
}

/* Camera */

.camera-idle {
/*  fill: #B9CEF7 !important; */
  fill: #6FAECE !important;
}

/* Generic */

.switch-off {
  fill-opacity: 0 !important;
}

.switch-on {
  fill-opacity: 1 !important;
}

/* Doorbell */

.doorbell-off {
  fill: #C3B7F4 !important;
}

.doorbell-on {
  fill: #F8D2B9 !important;
}

/* Temperature sensor */

.temp-very-low-background {
  fill: #d9edf7 !important;
  fill-opacity: 1 !important;
}

.temp-below-average-background {
  fill: #dcefe8 !important;
  fill-opacity: 1 !important;
}

.temp-average-background {
  fill: #dff0d8 !important;
  fill-opacity: 1 !important;
}

.temp-very-high-background {
  fill: #f2dede !important;
  fill-opacity: 1 !important;
}

/* Media player */

.tv-off {
  fill: url(#glow_off_1_) !important
}
.tv-on {
  fill: url(#remote.harmony_hub_1_) !important;
}
/* .tv-idle { */
  /* fill: #2baaa6 !important; */
/* } */

/* bathroom Fan */
#switch\.bathroom_fan_switch {
  transform-origin: center; 
}
.fan-on {
  -webkit-animation: rotation 3s infinite linear;
}
.fan-off {
}
#bathroom_fan_1 {
	  transform: translate(1821.501px,  294.117px);
}
/*
message from the past to future me: 
any rotating _group_ will be super wonky if just placed in the SVG at its location (it will rotate around 0,0 with its location as the radius). 
Instead, choose the location then create a containing group and apply transform: translate to that container group with your chosen location (see bathroom_fan_1). 
Place the rotating group back to 0,0 and it should work. 
note: this isn't neccessary if it is an object that is rotating and not a group
*/