homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 99
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Los_Angeles
  # Customization file
  customize: !include customize.yaml
system_health:
# Show links to resources in log and frontend
#introduction: 
lovelace:
  mode: yaml
# If an item is excluded here, it will not show up on history or logbook pages
# history_graph won't work if the item is excluded here
recorder:
  db_url: !secret db_url
  purge_keep_days: 4
  purge_interval: 1
  exclude:
#    domains:
    entities:
      - sun.sun
      - sensor.date
      - sensor.date_time
      - sensor.internet_time
      - sensor.time_date
      - sensor.time_utc
      - sensor.time
      - sensor.uptime


# History overview page only. Probably identical to Logbook
history:
  include:
    entities:
      - sensor.bathroom_sensor_burglar
      - sensor.frontdoor_sensor_burglar
      - sensor.hallway_motion_sensor_burglar
      - sensor.frontdoor_sensor_burglar
      - sensor.backdoor_sensor_burglar
      - sensor.bathroom_sensor_burglar
    domains:
      - media_player
      - device_tracker
      - light
      - climate
  exclude:
    entities:
      - light.hallway_light
      - light.bedroom_color_1
    domains:
      - automation
      - script
      - template
      - group
      - input_boolean
      - input_datetime
      - input_select
      - input_text
      - sensor
      - weather

      # Logbook page only. Probably identical to History page
logbook:
  exclude:
    entities:
      - sensor.bathroom_sensor_sourcenodeid
      - sensor.bathroom_sensor_alarm_level
      - sensor.hallway_motion_sensor_alarm_type
      - sensor.hallway_motion_sensor_sourcenodeid
      - sensor.hallway_motion_sensor_alarm_level
      - automation.hallway_movement
      - sensor.keypad_1_temp_lock_turn_off
      - sensor.keypad_1_temp_lock_turn_on
      - sensor.keypad_2_temp_lock_turn_off
      - sensor.keypad_2_temp_lock_turn_on
      - sensor.keypad_3_temp_lock_turn_off
      - sensor.keypad_3_temp_lock_turn_on
      - sensor.keypad_4_temp_lock_turn_off
      - sensor.keypad_4_temp_lock_turn_on
      - sensor.keypad_5_temp_lock_turn_off
      - sensor.keypad_5_temp_lock_turn_on
      - sensor.keypad_6_temp_lock_turn_off
      - sensor.keypad_6_temp_lock_turn_on
      - sensor.keypad_7_temp_lock_turn_off
      - sensor.keypad_7_temp_lock_turn_on
      - sensor.keypad_8_temp_lock_turn_off
      - sensor.keypad_8_temp_lock_turn_on
      - sensor.keypad_9_temp_lock_turn_off
      - sensor.keypad_9_temp_lock_turn_on
      - sensor.keypad_10_temp_lock_turn_off
      - sensor.keypad_10_temp_lock_turn_on
      - sensor.keypad_11_temp_lock_turn_off
      - sensor.keypad_11_temp_lock_turn_on
      - sensor.keypad_12_temp_lock_turn_off
      - sensor.keypad_12_temp_lock_turn_on
      - sensor.keypad_13_temp_lock_turn_off
      - sensor.keypad_13_temp_lock_turn_on
      - sensor.keypad_14_temp_lock_turn_off
      - sensor.keypad_14_temp_lock_turn_on
      - sensor.keypad_15_temp_lock_turn_off
      - sensor.keypad_15_temp_lock_turn_on
    domains:
      - weather
# Enables the frontend
frontend:
  themes: !include_dir_merge_named themes
# Enables configuration UI
config:

http:
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  base_url: !secret base_url
  ssl_certificate: /ssl/fullchain.pem  
  ssl_key: /ssl/privkey.pem  
  ssl_profile: intermediate
  cors_allowed_origins:  
   - https://google.com  
   - https://home-assistant.io  
  trusted_networks:  
   - 127.0.0.1  
   - ::1  
   - 192.168.0.0/24  
   - 192.168.1.0/24  
  ip_ban_enabled: True  
  login_attempts_threshold: 3  
# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true

# Discover some devices automatically
discovery:
  ignore:
    - harmony
    - igd

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:



# Track the sun
sun:

####################
##### Weather ######
####################

weather:
  - platform: darksky
    api_key: !secret darksky_api
    mode: daily

###############################
##### Push Notificatoins ######
###############################
notify:
  - platform: html5
    name: notify
    vapid_pub_key: !secret vapid_pub_key
    vapid_prv_key: !secret vapid_prv_key
    vapid_email: !secret email   
################################
##### Door Code Interface ######      only used for Doorcode Interface currently
################################
input_text: !include input_text.yaml
input_select: !include input_select.yaml
input_datetime: !include input_datetime.yaml
input_boolean: !include input_boolean.yaml


####################
##### Sensors ######
####################
binary_sensor:
  - platform: template
    sensors: 
      hallway_motion:
        friendly_name: "Hallway Motion"
        value_template: >-
          {%- if ((not is_state('sensor.hallway_motion_sensor_burglar', '0'))) -%}
            true
          {%- else -%}
            false
          {%- endif -%}

sensor:
  - platform: darksky
    api_key: !secret darksky_api
    monitored_conditions:
      - temperature
    scan_interval: '00:15:00'
  - platform: cert_expiry
    host: !secret cert_expiry_host
    port: 8123
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'time_date'
      - 'time_utc'
      - 'beat'
  - platform: uptime
  - platform: pi_hole
    ssl: true
    verify_ssl: false
    host: !secret pi_hole_host
    # host: localhost:444
    monitored_conditions:
      - ads_blocked_today
      - ads_percentage_today
    
  - platform: template
    sensors:
      honeywell_temp:
        friendly_name: "Downstairs Temperature"
        unit_of_measurement: '°F'
        value_template: "{{ states.climate.thermostat.attributes.current_temperature }}"
      frontdoorbattery:
        value_template: "{{ states.zwave.lock_front_door_deadbolt.attributes.battery_level }}"
        friendly_name: 'Front Door Lock Battery'
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states('sensor.frontdoorbattery')|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}
          {% endif %}
      bathroom_humidity_diff:
        friendly_name: "Humidity difference between bathroom and house"
        unit_of_measurement: '%'
        value_template: "{{ states('sensor.bathroom_sensor_relative_humidity')|float|round(0) - states('sensor.home_humidity')|float|round(0) }}"
      house_avg_temp:
        friendly_name: "Home Temperature"
        unit_of_measurement: '°F'
        value_template: >-
          {{ ((float(states.sensor.bedroom_temperature.state) + float(states.sensor.home_temperature.state) + float(states.sensor.living_room_temperature.state)) / 3) | round(2) }}
      keypad_1_temp_lock_turn_on:
        friendly_name: Turn keypad 1 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_1_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_1_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_2_temp_lock_turn_on:
        friendly_name: Turn keypad 2 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_2_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_2_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_3_temp_lock_turn_on:
        friendly_name: Turn keypad 3 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_3_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_3_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_4_temp_lock_turn_on:
        friendly_name: Turn keypad 4 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_4_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_4_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_5_temp_lock_turn_on:
        friendly_name: Turn keypad 5 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_5_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_5_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_6_temp_lock_turn_on:
        friendly_name: Turn keypad 6 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_6_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_6_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_7_temp_lock_turn_on:
        friendly_name: Turn keypad 7 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_7_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_7_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_8_temp_lock_turn_on:
        friendly_name: Turn keypad 8 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_8_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_8_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_9_temp_lock_turn_on:
        friendly_name: Turn keypad 9 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_9_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_9_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_10_temp_lock_turn_on:
        friendly_name: Turn keypad 10 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_10_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_10_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_11_temp_lock_turn_on:
        friendly_name: Turn keypad 11 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_11_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_11_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_12_temp_lock_turn_on:
        friendly_name: Turn keypad 12 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_12_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_12_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_13_temp_lock_turn_on:
        friendly_name: Turn keypad 13 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_13_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_13_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_14_temp_lock_turn_on:
        friendly_name: Turn keypad 14 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_14_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_14_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_15_temp_lock_turn_on:
        friendly_name: Turn keypad 15 on
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_15_date_start'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_15_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_1_temp_lock_turn_off:
        friendly_name: Turn keypad 1 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_1_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_1_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_2_temp_lock_turn_off:
        friendly_name: Turn keypad 2 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_2_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_2_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_3_temp_lock_turn_off:
        friendly_name: Turn keypad 3 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_3_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_3_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_4_temp_lock_turn_off:
        friendly_name: Turn keypad 4 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_4_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_4_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_5_temp_lock_turn_off:
        friendly_name: Turn keypad 5 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_5_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_5_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_6_temp_lock_turn_off:
        friendly_name: Turn keypad 6 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_6_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_6_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_7_temp_lock_turn_off:
        friendly_name: Turn keypad 7 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_7_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_7_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_8_temp_lock_turn_off:
        friendly_name: Turn keypad 8 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_8_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_8_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_9_temp_lock_turn_off:
        friendly_name: Turn keypad 9 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_9_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_9_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_10_temp_lock_turn_off:
        friendly_name: Turn keypad 10 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_10_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_10_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_11_temp_lock_turn_off:
        friendly_name: Turn keypad 11 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_11_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_11_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_12_temp_lock_turn_off:
        friendly_name: Turn keypad 12 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_12_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_12_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_13_temp_lock_turn_off:
        friendly_name: Turn keypad 13 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_13_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_13_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_14_temp_lock_turn_off:
        friendly_name: Turn keypad 14 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_14_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_14_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

      keypad_15_temp_lock_turn_off:
        friendly_name: Turn keypad 15 off
        entity_id: sensor.date_time
        value_template: >-
          {% set input = states['input_datetime']['door_keypad_15_date_end'] %}
          {% set time_now = states['sensor']['date__time'].state | replace(',', '') ~ ':00' %}
          {% set access_schedule = states['input_select']['door_keypad_15_access_schedule'].state %}
          {{ (access_schedule == 'Temporary' or access_schedule == 'Recurring') and input.state == time_now }}

# these use the alarm type to determine how the door was unlocked.  I know this works with Schlage, but I believe
# it works with other zwave locks as well.  As before make sure the name matches your lock
      frontdoor_action:
        friendly_name: 'Front Door Lock'
        value_template: >
          {% if is_state('sensor.lock_front_door_deadbolt_alarm_type', '22') %}
            Manual Unlock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '21') %}
            Manual Lock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '19') %}
            Keypad Unlock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '18') %}
            Keypad Lock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '25') %}
            Wireless Unlock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '24') %}
            Wireless Lock
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '9') %}
            Lock Jammed
          {% elif is_state('sensor.lock_front_door_deadbolt_alarm_type', '161') %}
            Tamper Alarm
          {% else %}
            HA Controlled
          {% endif %}
  # this uses alarm type of keypad unlock/keypad lock, and then pulls the alarm level (code slot) to determin which slot was used                
      frontdoor_code:
        friendly_name: 'Front Door Code'
        value_template: >
          {% if is_state('sensor.lock_front_door_deadbolt_alarm_type', '19') or is_state('sensor.lock_front_door_deadbolt_alarm_type', '18') %}
            {% if is_state('sensor.lock_front_door_deadbolt_alarm_level', '1') %}
              {{ states.input_text.door_keypad_1_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '2') %}
              {{ states.input_text.door_keypad_2_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '3') %}
              {{ states.input_text.door_keypad_3_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '4') %}
              {{ states.input_text.door_keypad_4_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '5') %}
              {{ states.input_text.door_keypad_5_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '6') %}
              {{ states.input_text.door_keypad_6_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '7') %}
              {{ states.input_text.door_keypad_7_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '8') %}
              {{ states.input_text.door_keypad_8_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '9') %}
              {{ states.input_text.door_keypad_9_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '10') %}
              {{ states.input_text.door_keypad_10_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '11') %}
              {{ states.input_text.door_keypad_11_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '12') %}
              {{ states.input_text.door_keypad_12_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '13') %}
              {{ states.input_text.door_keypad_13_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '14') %}
              {{ states.input_text.door_keypad_14_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '15') %}
              {{ states.input_text.door_keypad_15_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '16') %}
              {{ states.input_text.door_keypad_16_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '17') %}
              {{ states.input_text.door_keypad_17_name.state }}
            {% elif is_state('sensor.lock_front_door_deadbolt_alarm_level', '18') %}
              {{ states.input_text.door_keypad_18_name.state }}
            {% else %}
              Unknown
            {% endif %}
          {% else %}
            n/a
          {% endif %}

# Text to speech
tts:
  - platform: google

####################
##### Lights #######
####################
hue:
  bridges:
  - host: 192.168.2.10
  
light:
  - platform: group
    name: All Lights
    entities:
      - light.bathroom
      - light.bathroom_color_1
      - light.bathroom_lightswitch_level
      - light.bedroom
      - light.bedroom_color_2
      - light.bedroom_lightswitch_level
      - light.dining
      - light.hallway_lightswitch_level
      - light.kitchen_lightswitch_1_level
      - light.kitchen_lightswitch_2_level
      - light.office_lightswitch_level
      - light.spare_bedroom_lightswitch_level
####################
##### Remotes ######
####################
remote:
  - platform: harmony
    name: Harmony Hub
    host: 192.168.1.15
    activity: 23149902
###########################
##### Device Tracker ######
###########################
device_tracker:
  - platform: unifi_direct
    host: 192.168.1.6
    username: Zorks
    password: !secret unifi_pw
    interval_seconds: 12
    consider_home: 60
    track_new_devices: false
#works but immediately start getting a cascade of errors from other components, mostly the hue bridge and occasionally Ecobee
  # - platform: bluetooth_tracker
    # track_new_devices: true
    # interval_seconds: 12
    # consider_home: 60

###########################
#####  Thermostats   ######
###########################
climate:
  - platform: honeywell
    username: !secret climate_username 
    password: !secret climate_password
    region: us
    scan_interval: 600
    name: Downstairs Thermostat
ecobee:
  api_key: !secret ecobee_api_key
##################################
#####  Google Assistant     ######
################################## 
google_assistant: 
  project_id: !secret ga_project_id
  api_key: !secret ga_api_key
  expose_by_default: false
  entity_config:
    light.bedroom_lightswitch_level:
      expose: true
      name: bedroom lights
    light.hallway_lightswitch_level:
      expose: true
      name: hallway lights
    light.bathroom_lightswitch_level:
      expose: true
      name: bathroom lights
    light.kitchen_lightswitch_1_level:
      expose: true
      name: Kitchen Light 1
    light.kitchen_lightswitch_2_level:
      expose: true
      name: Kitchen Light 2
    switch.bathroom_fan_switch:
      expose: true
      name: bathroom fan
    light.spare_bedroom_lightswitch_level:
      expose: true
      name: spare bedroom lights
    light.office_lightswitch_level:
      expose: true
      name: office lights  
  
###########################
#####     Z Wave     ######
###########################   
zwave:
  usb_path: /dev/ttyACM0
  network_key: !secret zwave_network_key
  
###########################
#####      MQTT      ######
########################### 
mqtt:
  broker: core-mosquitto



###########################
###### Custom Panels ######
###########################
# panel_custom:
  # - name: floorplan
    # sidebar_title: Floorplan
    # sidebar_icon: mdi:home
    # url_path: floorplan
    # config: !include floorplan.yaml
panel_iframe:
  pihole:
    title: Pi-hole
    icon: mdi:block-helper
    url: !secret pi_hole_panel
  tautulli:
    title: Tautulli
    icon: mdi:television
    url: !secret tautulli_panel
# pointless to have the Plex panel as the cast function doesn't seem to work in an iframe.    
  # plex:
    # title: Plex
    # icon: mdi:plex
    # url: !secret plex_panel
###########################
##### History Graphs ######
###########################
history_graph:
  temperatures:
    name: Temperatures
    hours_to_show: 24
    refresh: 1800
    entities:
      # - sensor.home_temperature
      # - sensor.living_room_temperature
      # - sensor.bedroom_temperature
      - sensor.house_avg_temp
      - sensor.pws_temp_f
      - sensor.honeywell_temp
  humidity:
    name: Humidity
    hours_to_show: 24
    refresh: 600
    entities:
      - sensor.bathroom_sensor_relative_humidity
      - sensor.home_humidity 

group: !include groups.yaml
automation: !include_dir_list automation
script: !include_dir_merge_named scripts

