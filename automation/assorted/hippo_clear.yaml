id: hippo_clear
alias: 'clear the Hippos schedule and/or make certain it has enough charge'
  # if there's no scheduled departure within the next 24 hrs, the precondition system will turn off
trigger:
    # triggers when the next scheduled departure updates to +24 hrs
  - platform: numeric_state
    entity_id: sensor.next_hippo_departure_hrs
    above: '24'
    # triggers when car is unplugged (as a backup)
  - platform: state
    entity_id: binary_sensor.the_hippo_charger
    from: "on"
    to: "off"
    # triggers when car is plugged in (as a backup)
  - platform: state
    entity_id: binary_sensor.the_hippo_charger
    from: "off"
    to: "on"
action:
  - choose:
      #  If the target SoC is 70+, the battery is low, and the next scheduled departure is more than 6 hrs away, this will ensure a minimum level of charge for unexpected trips
    - conditions: 
      - condition: template
        # if the set SoC is >70
        value_template: >-
            {{(integration_entities('scheduler') 
            | select('is_state', 'on')
            | expand 
            | sort(attribute="attributes.next_trigger")
            | first 
            | regex_findall("\'value\'\: \d+","")
            | regex_replace ("[^0-9]","") 
            | int(default=69)) > 70
            }}
        # if the next adventure is more than 6 hrs from now?
        # in case of error defaults to yes @ 7 hrs
      - condition: template
        value_template: "{{float(states('sensor.next_hippo_departure_hrs'), 7) > 6 }}"
        # Is the next adventure less than 24 hrs from now? (if it more, skips to next set of choose sequence)
        # in case of error defaults to no @ 25 hrs
      - "{{float(states('sensor.next_hippo_departure_hrs'), 25 ) < 24 }}" 
      # is the battery low enough to bother
      - condition: numeric_state
        entity_id: sensor.the_hippo_battery
        below: 65
      sequence: 
        - service: script.turn_on
          data:
            entity_id: script.hippo_minimum_charge 
    - conditions: 
        # Is the next adventure more than 24 hrs from now? (note that no scheduled departures will default to +24 hrs to make this condition trigger too)
        # in case of error defaults to yes @ 25 hrs
      - "{{float(states('sensor.next_hippo_departure_hrs'), 25) > 24 }}" 
        # Hassio automated scheduled departures only apply to Home so this should only clear those (ideally)
        # leaving after a scheduled departure means unplugging and should trigger automation before leaving home zone
      - condition: state 
        entity_id: device_tracker.the_hippo_location_tracker
        state: "home"
      # the service call only works if the vehicle is both awake and in park
      sequence: 
        - alias: "Wait until car is awake"
          wait_template: "{{ is_state('binary_sensor.the_hippo_asleep', 'off') }}"  
        - alias: "Wait until car is in park"
          wait_template: "{{ is_state('sensor.the_hippo_shift_state', 'P') }}"    
        - service: tesla_custom.api
          data:
            command: SCHEDULED_DEPARTURE
            parameters:
              path_vars:
                vehicle_id: >-
                  {{ state_attr('binary_sensor.the_hippo_online', 'id') }}
              enable: true
              # set to 1 minute after midnight, a departure we'll never choose, so the hippo_departure animation conditions will never match a "turned off" schedule
              departure_time: 1
              preconditioning_enabled: false
              preconditioning_weekdays_only: false
              off_peak_charging_enabled: false
              off_peak_charging_weekdays_only: false
              # set to 1 minute after midnight, a departure we'll never choose, so the hippo_departure animation conditions will never match a "turned off" schedule
              end_off_peak_time: 1
              # vehicle should wake up at some point and get the info?
              wake_if_asleep: false
          # resets charge limit to 70
        - service: tesla_custom.api
          data:
            command: CHANGE_CHARGE_LIMIT
            parameters:
              path_vars:
                vehicle_id: >-
                  {{ state_attr('binary_sensor.the_hippo_online', 'id') }}
              percent: 70      
            